meta:
  db: ~
  name: (( merge || "bosh" ))
  networks:
    default:
      static_ips: (( merge || [10.0.0.7] ))
  cloud_properties:
    availability_zone: ~
  default_static_ip: (( meta.networks.default.static_ips.[0] ))
  aws:
    access_key_id: ~
    secret_access_key: ~
    default_key_name: (( merge || "bosh" ))
    default_security_groups: ~
    region: ~
  parent_bosh_ip: ~
  bosh_domain_name: ~
  passwords:
    nats-password: ~
    admin-password: ~
    director-password: ~
    agent-password: ~
    registry-password: ~
    hm-password: ~

name: (( meta.name ))

# Execute the "bosh status" command to obtain the director_uuid.
director_uuid: (( merge ))

releases:
- name: bosh
  version: latest
- name: bosh-aws-cpi
  version: latest
- name: uaa
  version: latest
- name: fisma
  version: latest
- name: tripwire
  version: latest
- name: awslogs
  version: latest
- name: nessus-agent
  version: latest
- name: newrelic
  version: latest
- name: riemannc
  version: latest
- name: clamav
  version: latest
- name: snort
  version: latest

compilation:
  workers: 3
  network: default
  reuse_compilation_vms: true
  cloud_properties:
    instance_type: m3.large
    availability_zone: (( meta.cloud_properties.availability_zone ))

update:
  canaries: 1
  canary_watch_time: 3000-180000
  update_watch_time: 3000-180000
  max_in_flight: 4

networks: (( merge ))

disk_pools:
  - name: bosh-ssd
    disk_size: 300000
    cloud_properties:
      type: gp2
      encrypted: true

jobs:
  - name: bosh
    templates:
    - {name: nats, release: bosh}
    - {name: blobstore, release: bosh}
    - {name: director, release: bosh}
    - {name: health_monitor, release: bosh}
    - {name: registry, release: bosh}
    - {name: powerdns, release: bosh}
    - {name: aws_cpi, release: bosh-aws-cpi}
    - {name: uaa, release: uaa}
    - {name: harden, release: fisma}
    - {name: tripwire, release: tripwire}
    - {name: awslogs, release: awslogs}
    - {name: nessus-agent, release: nessus-agent}
    - {name: newrelic-monitor, release: newrelic}
    - {name: riemannc, release: riemannc}
    - {name: clamav, release: clamav}
    - {name: snort, release: snort}
    instances: 1
    resource_pool: large
    persistent_disk_pool: bosh-ssd
    networks:
      - name: default
        static_ips: (( meta.networks.default.static_ips ))

resource_pools:
- name: large
  network: default
  stemcell:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
    version: latest
  cloud_properties:
    instance_type: m3.large
    availability_zone: (( meta.cloud_properties.availability_zone ))
    key_name: (( meta.aws.default_key_name ))

properties:
  postgres: &bosh_db
    adapter: postgres
    port: 5432
    user: (( meta.db.user ))
    password: (( meta.db.pass ))
    host: (( meta.db.host ))
    database: (( meta.db.database ))
    additional_databases:
      - (( meta.db.uaadb || "bosh_uaadb" ))

  dns:
    address: (( meta.default_static_ip ))
    db: *bosh_db
    recursor: (( meta.parent_bosh_ip ))
    domain_name: (( meta.bosh_domain_name ))

  nats:
    address: (( meta.default_static_ip ))
    user: nats
    password: (( meta.passwords.nats-password ))

  director:
    name: bosh
    address: (( meta.default_static_ip ))
    db: *bosh_db
    ssl: (( merge ))
    cpi_job: aws_cpi
    user_management:
      provider: uaa
      uaa:
        <<: (( merge ))
        url: (( "https://" meta.default_static_ip ":8443" ))

  blobstore:
    provider: s3
    bucket_name: (( merge ))
    access_key_id: (( merge ))
    secret_access_key: (( merge ))
    s3_region: ((meta.aws.region))
    agent:
      user: agent
      password: (( meta.passwords.agent-password ))
    director:
      user: director
      password: (( meta.passwords.director-password ))

  registry:
    address: (( meta.default_static_ip ))
    host: (( meta.default_static_ip ))
    db: *bosh_db
    http:
      user: registry
      password: (( meta.passwords.registry-password ))
      port: 25777
    username: registry
    password: (( meta.passwords.registry-password ))
    port: 25777
    cloud:
      plugin: aws
      credentials_source: static
      access_key_id: (( meta.aws.access_key_id ))
      secret_access_key: (( meta.aws.secret_access_key ))
      region: (( meta.aws.region ))

  hm:
    director_account:
      user: admin
      password: (( meta.passwords.admin-password ))
      ca_cert: (( merge ))
      client_id: hm
      client_secret: (( merge ))
    varz_enabled: true
    resurrector_enabled: true
    resurrector:
      minimum_down_jobs: 3

  aws: &aws
    access_key_id: (( meta.aws.access_key_id ))
    secret_access_key: (( meta.aws.secret_access_key ))
    default_key_name: (( meta.aws.default_key_name ))
    default_security_groups: (( meta.aws.default_security_groups ))
    region: (( meta.aws.region ))

  agent:
    mbus: (( "nats://nats:" meta.passwords.nats-password "@" meta.default_static_ip ":4222" ))
  ntp: &ntp [0.pool.ntp.org, 1.pool.ntp.org]

  uaa:
    <<: (( merge ))
    url: (( "https://" meta.default_static_ip ":8443" ))
    clients:
      hm:
        override: true
        authorized-grant-types: client_credentials
        scope: ""
        authorities: bosh.admin
        secret: (( merge ))
      ci:
        authorized-grant-types: client_credentials
        scope: ""
        authorities: bosh.admin
        secret: (( merge ))
      bosh_cli:
        override: true
        authorized-grant-types: password,refresh_token
        # scopes the client may receive
        scope: openid,bosh.admin,bosh.read,bosh.*.admin,bosh.*.read
        authorities: uaa.none
        access-token-validity: 1200 # 20 min
        refresh-token-validity: 86400 # re-login required once a day
        secret: ""

    zones: {internal: {hostnames: []}}

  uaadb: (( merge ))
